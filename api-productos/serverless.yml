service: api-productos

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x # o la versión de Node.js que prefieras
  timeout: 30  
  iam:
    role: arn:aws:iam::150209693186:role/LabRole
    # Añadir permisos para DynamoDB
    statements:
      - Effect: Allow
        Action:
          - lambda:InvokeFunction
        Resource:
          - arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:api-usuarios-${self:provider.stage}-validarToken
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:GetItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:DescribeStream
          - dynamodb:GetRecords
          - dynamodb:GetShardIterator
          - dynamodb:ListStreams
        Resource:
          - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.tablePrefix}_cursos"
          - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.tablePrefix}_user"
          - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.tablePrefix}_cursos/stream/*"
  stage: dev
  region: us-east-1 #

custom:
  tablePrefix: ${opt:stage, self:provider.stage}

resources:
  Resources:
    CursosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tablePrefix}_cursos
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: curso_id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: curso_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

functions:
  createCurso:
    handler: functions/createCurso.createCurso
    environment:
      CURSOS_TABLE_NAME: ${self:custom.tablePrefix}_cursos
      USERS_TABLE_NAME: ${self:custom.tablePrefix}_user
      STAGE: ${self:provider.stage}
    events:
      - http:
          path: /cursos
          method: post
          cors: true

  searchCursosByName:
    handler: functions/searchCursosByName.searchCursosByName
    environment:
      CURSOS_TABLE_NAME: ${self:custom.tablePrefix}_cursos
      STAGE: ${self:provider.stage}
    events:
      - http:
          path: /cursos/search
          method: get
          cors: true

  searchCursosByCategory:
    handler: functions/searchCursosByCategory.searchCursosByCategory
    environment:
      CURSOS_TABLE_NAME: ${self:custom.tablePrefix}_cursos
      STAGE: ${self:provider.stage}
    events:
      - http:
          path: /cursos/category
          method: get
          cors: true

  getCurso:
    handler: functions/getCurso.getCurso
    environment:
      CURSOS_TABLE_NAME: ${self:custom.tablePrefix}_cursos
      STAGE: ${self:provider.stage}
    events:
      - http:
          path: /cursos/{id}
          method: get
          cors: true

  updateCurso:
    handler: functions/updateCurso.updateCurso
    environment:
      CURSOS_TABLE_NAME: ${self:custom.tablePrefix}_cursos
      STAGE: ${self:provider.stage}
    events:
      - http:
          path: /cursos/{id}
          method: put
          cors: true

  deleteCurso:
    handler: functions/deleteCurso.deleteCurso
    environment:
      CURSOS_TABLE_NAME: ${self:custom.tablePrefix}_cursos
      STAGE: ${self:provider.stage}
    events:
      - http:
          path: /cursos/{id}
          method: delete
          cors: true
            
  listCursos:
    handler: functions/listCursos.listCursos
    environment:
      CURSOS_TABLE_NAME: ${self:custom.tablePrefix}_cursos
      STAGE: ${self:provider.stage}
    events:
      - http:
          path: /cursos
          method: get
          cors: true

  actualizarCursos:
    handler: functions/actualizarCursos.handler
    events:
      - stream:
          type: dynamodb
          arn: arn:aws:dynamodb:us-east-1:150209693186:table/dev_cursos/stream/2025-07-13T20:47:08.739 # Reemplaza con el ARN correcto del Stream
          batchSize: 5
          startingPosition: LATEST
    environment:
      ES_HOST: '34.206.17.81'  # IP de tu Elasticsearch
      ES_PORT: 9200
      ES_INDEX: 'productos'