service: api-compras

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  timeout: 30
  iam:
    role: arn:aws:iam::150209693186:role/LabRole
    statements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:Query
        Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.tablePrefix}_compras"
  stage: dev
  region: us-east-1

custom:
  tablePrefix: ${opt:stage, self:provider.stage}

resources:
  Resources:
    ProdComprasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tablePrefix}_compras
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: order_id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: order_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

functions:
  createCompra:
    handler: functions/createCompra.createCompra
    environment:
      COMPRAS_TABLE_NAME: ${self:custom.tablePrefix}_compras
    events:
      - http:
          path: /compras
          method: post
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Auth-Token
              - tenant-id
            allowCredentials: true
          environment:
            COMPRAS_TABLE_NAME: ${self:custom.tablePrefix}_compras
          authorizer:
            name: validarToken
            arn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:api-usuarios-dev-validarToken
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
      - http:
          path: /compras
          method: options  # preflight
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - tenant-id
            allowCredentials: true
      - http:
          path: /compras
          method: options  # preflight
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - tenant-id
            allowCredentials: true
  listCompras:
    handler: functions/listCompras.listCompras
    environment:
      COMPRAS_TABLE_NAME: ${self:custom.tablePrefix}_compras
    events:
      - http:
          path: /compras
          method: get
          cors:
            origin: 'http://localhost:5173'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Auth-Token
              - tenant-id
            allowCredentials: true
          authorizer:
            name: validarToken
            arn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:api-usuarios-dev-validarToken
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token